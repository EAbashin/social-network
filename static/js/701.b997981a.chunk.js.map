{"version":3,"file":"static/js/701.b997981a.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Content/Login/Login.module.css?f29c","webpack://social/./src/components/Content/common/Forms/LoginForm/LoginForm.module.css?83a9","components/Content/common/Forms/LoginForm/LoginForm.jsx","components/Content/Login/Login.jsx","components/Content/Login/LoginContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__pWxe7\",\"header\":\"Login_header__1sjm-\",\"logo\":\"Login_logo__6fv7+\",\"title\":\"Login_title__HQuII\",\"subheader\":\"Login_subheader__tDyVw\",\"subtitle\":\"Login_subtitle__ic9zc\",\"active\":\"Login_active__TvXm7\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__FJlQ0\",\"label\":\"LoginForm_label__U5Bzj\",\"input\":\"LoginForm_input__6FfNn\",\"inputError\":\"LoginForm_inputError__iGJHh\",\"checkbox\":\"LoginForm_checkbox__gI1Iu\",\"checkbox_input_wrapper\":\"LoginForm_checkbox_input_wrapper__Qhn4r\",\"checkbox_input\":\"LoginForm_checkbox_input__UmDN7\",\"btn\":\"LoginForm_btn__ipv25\",\"captchaWrapper\":\"LoginForm_captchaWrapper__AHHUJ\",\"captchaInput\":\"LoginForm_captchaInput__koC3y\",\"captcha\":\"LoginForm_captcha__ml9Dv\",\"error\":\"LoginForm_error__m+41u\"};","import {Field, Form} from \"react-final-form\";\nimport s from \"./LoginForm.module.css\";\nimport {required} from \"../../../../utilities/validators/validators\";\nimport {FORM_ERROR} from \"final-form\";\n\nconst LoginForm = (props) => {\n    const onSubmit = async (e) => {\n        const data = await props.postAuthLoginThunkCreator(e.email, e.password, e.rememberMe, e.captcha);\n        if (data) {\n            return { [FORM_ERROR]: data.messages[0] }\n        }\n    };\n    return (\n        <Form\n            onSubmit={onSubmit}\n            initialValues={{\n                email: '',\n                password: '',\n                rememberMe: false,\n                captcha: ''\n            }}\n            render={({handleSubmit, submitting, pristine, submitError}) => (\n                <form onSubmit={handleSubmit} className={s.form} action=\"src/components/Content/common/Forms/LoginForm/LoginForm\">\n                    <Field\n                        name=\"email\"\n                        validate={required}>\n                        {({input, meta}) => {\n                            const hasError = meta.error && meta.touched;\n                            return (\n                                <div>\n                                    <label className={s.label}>Login</label>\n                                    <input className={`${s.input} ${hasError ? s.inputError : ''}`} {...input} type=\"email\"\n                                           placeholder=\"login\"/>\n                                </div>\n                            )\n                        }}\n                    </Field>\n\n                    <Field\n                        name=\"password\"\n                        validate={required}>\n                        {({input, meta}) => {\n                            const hasError = meta.error && meta.touched;\n                            return (\n                                <div>\n                                    <label className={s.label}>Password</label>\n                                    <input className={`${s.input} ${hasError ? s.inputError : ''}`} {...input} type=\"password\"\n                                           placeholder=\"password\"/>\n                                </div>\n                            )\n                        }}\n                    </Field>\n\n                    {props.captcha ?\n                        <Field\n                            name=\"captcha\"\n                            validate={required}>\n                            {({input, meta}) => {\n                                const hasError = meta.error && meta.touched;\n                                return (\n                                    <div>\n                                        <label className={s.label}>Captcha</label>\n                                        <div className={s.captchaWrapper}>\n                                            <input className={`${s.input} ${s.captchaInput} ${hasError ? s.inputError : ''}`} {...input}\n                                                   type=\"text\"\n                                                   placeholder=\"captcha\"/>\n                                            <img src={props.captcha} alt=\"captcha\" className={s.captcha}/>\n                                        </div>\n                                    </div>\n                                )\n                            }}\n                        </Field> : ''}\n\n                    <div className={s.checkbox}>\n                        <div className={s.checkbox_input_wrapper}>\n                            <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" className={s.checkbox_input}/>\n                            <span>remember me</span>\n                        </div>\n\n                        <button type=\"submit\"\n                                disabled={submitting || pristine}\n                                className={s.btn}>\n                            login\n                        </button>\n                    </div>\n                    {submitError && <div className={s.error}>{submitError}</div>}\n                </form>\n            )}\n        />\n    )\n};\n\nexport default LoginForm;","import s from './Login.module.css';\nimport logo from '../../../assets/img/logo.png';\nimport LoginForm from \"../common/Forms/LoginForm/LoginForm\";\nimport {Navigate} from \"react-router-dom\";\nimport React from \"react\";\n\nconst Login = (props) => {\n    if (props.isAuth) return <Navigate to=\"/profile\"/>\n\n    return (\n        <div className={s.wrapper}>\n            <div className={s.header}>\n                <img className={s.logo} src={logo} alt=\"Logo\"/>\n                <h1 className={s.title}>KU-KU!</h1>\n            </div>\n            <div className={s.subheader}>\n                <h2 className={s.subtitle + ' ' + s.active}>Login</h2>\n                <h2 className={s.subtitle}>Registration</h2>\n            </div>\n            <LoginForm postAuthLoginThunkCreator={props.postAuthLoginThunkCreator} captcha={props.captcha}/>\n        </div>\n    )\n};\n\nexport default Login;","import {connect} from \"react-redux\";\nimport {postAuthLoginThunkCreator} from \"../../../redux/reducers/auth-reducer\";\nimport Login from \"./Login\";\n\nconst\n    mapStateToProps = (state) => {\n        return {\n            isAuth: state.auth.isAuth,\n            captcha: state.auth.captcha\n        };\n    },\n    mapDispatchToProps = {\n        postAuthLoginThunkCreator\n    };\n\nconst LoginContainer = connect(mapStateToProps, mapDispatchToProps)(Login);\n\nexport default LoginContainer;"],"names":["props","onSubmit","e","postAuthLoginThunkCreator","email","password","rememberMe","captcha","data","FORM_ERROR","messages","initialValues","render","handleSubmit","submitting","pristine","submitError","className","s","action","name","validate","required","input","meta","hasError","error","touched","type","placeholder","src","alt","component","disabled","isAuth","to","mapDispatchToProps","connect","state","auth","Login"],"sourceRoot":""}